{"ast":null,"code":"import * as queryStringUtils from \"query-string\";\nexport function getQueryString(url) {\n  const pathEnd = url.indexOf(\"?\") !== -1 ? url.indexOf(\"?\") : undefined;\n  const queryString = typeof pathEnd !== \"undefined\" ? url.substr(pathEnd) : \"\";\n  return queryString;\n}\nexport function appendToQueryString(queryString, newQueryParams) {\n  let queryParams = parseQueryString(queryString);\n  queryParams = Object.assign(Object.assign({}, queryParams), newQueryParams);\n  queryString = formatQueryString(queryParams);\n  return queryString;\n}\nexport function parseQueryString(queryString) {\n  return queryStringUtils.parse(queryString);\n}\nexport function formatQueryString(queryParams) {\n  return queryStringUtils.stringify(queryParams);\n}","map":{"version":3,"sources":["../../src/url.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,gBAAZ,MAAkC,cAAlC;AAEA,OAAM,SAAU,cAAV,CAAyB,GAAzB,EAAoC;EACxC,MAAM,OAAO,GAAuB,GAAG,CAAC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,GAA0B,GAAG,CAAC,OAAJ,CAAY,GAAZ,CAA1B,GAA6C,SAAjF;EAEA,MAAM,WAAW,GAAW,OAAO,OAAP,KAAmB,WAAnB,GAAiC,GAAG,CAAC,MAAJ,CAAW,OAAX,CAAjC,GAAuD,EAAnF;EAEA,OAAO,WAAP;AACD;AAED,OAAM,SAAU,mBAAV,CAA8B,WAA9B,EAAmD,cAAnD,EAAsE;EAC1E,IAAI,WAAW,GAAG,gBAAgB,CAAC,WAAD,CAAlC;EAEA,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,WAAR,CAAA,EAAwB,cAAxB,CAAX;EAEA,WAAW,GAAG,iBAAiB,CAAC,WAAD,CAA/B;EAEA,OAAO,WAAP;AACD;AAED,OAAM,SAAU,gBAAV,CAA2B,WAA3B,EAA8C;EAClD,OAAO,gBAAgB,CAAC,KAAjB,CAAuB,WAAvB,CAAP;AACD;AAED,OAAM,SAAU,iBAAV,CAA4B,WAA5B,EAA4C;EAChD,OAAO,gBAAgB,CAAC,SAAjB,CAA2B,WAA3B,CAAP;AACD","sourceRoot":"","sourcesContent":["import * as queryStringUtils from \"query-string\";\nexport function getQueryString(url) {\n    const pathEnd = url.indexOf(\"?\") !== -1 ? url.indexOf(\"?\") : undefined;\n    const queryString = typeof pathEnd !== \"undefined\" ? url.substr(pathEnd) : \"\";\n    return queryString;\n}\nexport function appendToQueryString(queryString, newQueryParams) {\n    let queryParams = parseQueryString(queryString);\n    queryParams = Object.assign(Object.assign({}, queryParams), newQueryParams);\n    queryString = formatQueryString(queryParams);\n    return queryString;\n}\nexport function parseQueryString(queryString) {\n    return queryStringUtils.parse(queryString);\n}\nexport function formatQueryString(queryParams) {\n    return queryStringUtils.stringify(queryParams);\n}\n//# sourceMappingURL=url.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports.microSeconds = exports[\"default\"] = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.type = void 0;\n\nvar _util = require(\"../util\");\n\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar type = 'simulate';\nexports.type = type;\nvar SIMULATE_CHANNELS = new Set();\n\nfunction create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\n\nfunction close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\n\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\n\nfunction onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  return true;\n}\n\nfunction averageResponseTime() {\n  return 5;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","averageResponseTime","canBeUsed","close","create","microSeconds","onMessage","postMessage","type","_util","require","SIMULATE_CHANNELS","Set","channelName","state","name","messagesCallback","add","channelState","messageJson","Promise","res","setTimeout","channelArray","Array","from","filter","channel","forEach","fn","_default"],"sources":["E:/intoweb3/NBlockment/blockment/node_modules/broadcast-channel/dist/lib/methods/simulate.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports.microSeconds = exports[\"default\"] = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.type = void 0;\n\nvar _util = require(\"../util\");\n\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar type = 'simulate';\nexports.type = type;\nvar SIMULATE_CHANNELS = new Set();\n\nfunction create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\n\nfunction close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\n\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\n\nfunction onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  return true;\n}\n\nfunction averageResponseTime() {\n  return 5;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B;AACAF,OAAO,CAACG,SAAR,GAAoBA,SAApB;AACAH,OAAO,CAACI,KAAR,GAAgBA,KAAhB;AACAJ,OAAO,CAACK,MAAR,GAAiBA,MAAjB;AACAL,OAAO,CAACM,YAAR,GAAuBN,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAAjD;AACAA,OAAO,CAACO,SAAR,GAAoBA,SAApB;AACAP,OAAO,CAACQ,WAAR,GAAsBA,WAAtB;AACAR,OAAO,CAACS,IAAR,GAAe,KAAK,CAApB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIL,YAAY,GAAGI,KAAK,CAACJ,YAAzB;AACAN,OAAO,CAACM,YAAR,GAAuBA,YAAvB;AACA,IAAIG,IAAI,GAAG,UAAX;AACAT,OAAO,CAACS,IAAR,GAAeA,IAAf;AACA,IAAIG,iBAAiB,GAAG,IAAIC,GAAJ,EAAxB;;AAEA,SAASR,MAAT,CAAgBS,WAAhB,EAA6B;EAC3B,IAAIC,KAAK,GAAG;IACVC,IAAI,EAAEF,WADI;IAEVG,gBAAgB,EAAE;EAFR,CAAZ;EAIAL,iBAAiB,CAACM,GAAlB,CAAsBH,KAAtB;EACA,OAAOA,KAAP;AACD;;AAED,SAASX,KAAT,CAAee,YAAf,EAA6B;EAC3BP,iBAAiB,CAAC,QAAD,CAAjB,CAA4BO,YAA5B;AACD;;AAED,SAASX,WAAT,CAAqBW,YAArB,EAAmCC,WAAnC,EAAgD;EAC9C,OAAO,IAAIC,OAAJ,CAAY,UAAUC,GAAV,EAAe;IAChC,OAAOC,UAAU,CAAC,YAAY;MAC5B,IAAIC,YAAY,GAAGC,KAAK,CAACC,IAAN,CAAWd,iBAAX,CAAnB;MACAY,YAAY,CAACG,MAAb,CAAoB,UAAUC,OAAV,EAAmB;QACrC,OAAOA,OAAO,CAACZ,IAAR,KAAiBG,YAAY,CAACH,IAArC;MACD,CAFD,EAEGW,MAFH,CAEU,UAAUC,OAAV,EAAmB;QAC3B,OAAOA,OAAO,KAAKT,YAAnB;MACD,CAJD,EAIGQ,MAJH,CAIU,UAAUC,OAAV,EAAmB;QAC3B,OAAO,CAAC,CAACA,OAAO,CAACX,gBAAjB;MACD,CAND,EAMGY,OANH,CAMW,UAAUD,OAAV,EAAmB;QAC5B,OAAOA,OAAO,CAACX,gBAAR,CAAyBG,WAAzB,CAAP;MACD,CARD;MASAE,GAAG;IACJ,CAZgB,EAYd,CAZc,CAAjB;EAaD,CAdM,CAAP;AAeD;;AAED,SAASf,SAAT,CAAmBY,YAAnB,EAAiCW,EAAjC,EAAqC;EACnCX,YAAY,CAACF,gBAAb,GAAgCa,EAAhC;AACD;;AAED,SAAS3B,SAAT,GAAqB;EACnB,OAAO,IAAP;AACD;;AAED,SAASD,mBAAT,GAA+B;EAC7B,OAAO,CAAP;AACD;;AAED,IAAI6B,QAAQ,GAAG;EACb1B,MAAM,EAAEA,MADK;EAEbD,KAAK,EAAEA,KAFM;EAGbG,SAAS,EAAEA,SAHE;EAIbC,WAAW,EAAEA,WAJA;EAKbL,SAAS,EAAEA,SALE;EAMbM,IAAI,EAAEA,IANO;EAObP,mBAAmB,EAAEA,mBAPR;EAQbI,YAAY,EAAEA;AARD,CAAf;AAUAN,OAAO,CAAC,SAAD,CAAP,GAAqB+B,QAArB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport Semaphore from './Semaphore';\n\nvar Mutex =\n/** @class */\nfunction () {\n  function Mutex() {\n    this._semaphore = new Semaphore(1);\n  }\n\n  Mutex.prototype.acquire = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, releaser;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._semaphore.acquire()];\n\n          case 1:\n            _a = _b.sent(), releaser = _a[1];\n            return [2\n            /*return*/\n            , releaser];\n        }\n      });\n    });\n  };\n\n  Mutex.prototype.runExclusive = function (callback) {\n    return this._semaphore.runExclusive(function () {\n      return callback();\n    });\n  };\n\n  Mutex.prototype.isLocked = function () {\n    return this._semaphore.isLocked();\n  };\n\n  Mutex.prototype.release = function () {\n    this._semaphore.release();\n  };\n\n  return Mutex;\n}();\n\nexport default Mutex;","map":{"version":3,"names":["__awaiter","__generator","Semaphore","Mutex","_semaphore","prototype","acquire","_a","releaser","_b","label","sent","runExclusive","callback","isLocked","release"],"sources":["E:/intoweb3/NBlockment/blockment/node_modules/async-mutex/es6/Mutex.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport Semaphore from './Semaphore';\nvar Mutex = /** @class */ (function () {\n    function Mutex() {\n        this._semaphore = new Semaphore(1);\n    }\n    Mutex.prototype.acquire = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, releaser;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._semaphore.acquire()];\n                    case 1:\n                        _a = _b.sent(), releaser = _a[1];\n                        return [2 /*return*/, releaser];\n                }\n            });\n        });\n    };\n    Mutex.prototype.runExclusive = function (callback) {\n        return this._semaphore.runExclusive(function () { return callback(); });\n    };\n    Mutex.prototype.isLocked = function () {\n        return this._semaphore.isLocked();\n    };\n    Mutex.prototype.release = function () {\n        this._semaphore.release();\n    };\n    return Mutex;\n}());\nexport default Mutex;\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,IAAIC,KAAK;AAAG;AAAe,YAAY;EACnC,SAASA,KAAT,GAAiB;IACb,KAAKC,UAAL,GAAkB,IAAIF,SAAJ,CAAc,CAAd,CAAlB;EACH;;EACDC,KAAK,CAACE,SAAN,CAAgBC,OAAhB,GAA0B,YAAY;IAClC,OAAON,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIO,EAAJ,EAAQC,QAAR;;MACA,OAAOP,WAAW,CAAC,IAAD,EAAO,UAAUQ,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACC,KAAX;UACI,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKN,UAAL,CAAgBE,OAAhB,EAAd,CAAP;;UACR,KAAK,CAAL;YACIC,EAAE,GAAGE,EAAE,CAACE,IAAH,EAAL,EAAgBH,QAAQ,GAAGD,EAAE,CAAC,CAAD,CAA7B;YACA,OAAO,CAAC;YAAE;YAAH,EAAeC,QAAf,CAAP;QAJR;MAMH,CAPiB,CAAlB;IAQH,CAVe,CAAhB;EAWH,CAZD;;EAaAL,KAAK,CAACE,SAAN,CAAgBO,YAAhB,GAA+B,UAAUC,QAAV,EAAoB;IAC/C,OAAO,KAAKT,UAAL,CAAgBQ,YAAhB,CAA6B,YAAY;MAAE,OAAOC,QAAQ,EAAf;IAAoB,CAA/D,CAAP;EACH,CAFD;;EAGAV,KAAK,CAACE,SAAN,CAAgBS,QAAhB,GAA2B,YAAY;IACnC,OAAO,KAAKV,UAAL,CAAgBU,QAAhB,EAAP;EACH,CAFD;;EAGAX,KAAK,CAACE,SAAN,CAAgBU,OAAhB,GAA0B,YAAY;IAClC,KAAKX,UAAL,CAAgBW,OAAhB;EACH,CAFD;;EAGA,OAAOZ,KAAP;AACH,CA3B0B,EAA3B;;AA4BA,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}
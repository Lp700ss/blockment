{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\");\n\nvar _sliceInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\n\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\n\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\n\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\n\nvar _Array$isArray = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/map\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/keys\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _values = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/values\"));\n\nvar _setTimeout2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/set-timeout\"));\n\nvar _bind = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/bind\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _EventEmitter2 = _interopRequireDefault(require(\"./EventEmitter\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _LiveQuerySubscription = _interopRequireDefault(require(\"./LiveQuerySubscription\"));\n\nvar _promiseUtils = require(\"./promiseUtils\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n\n  if (!it) {\n    if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context6;\n\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n\n  var n = _sliceInstanceProperty(_context6 = Object.prototype.toString.call(o)).call(_context6, 8, -1);\n\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n} // The LiveQuery client inner state\n\n\nvar CLIENT_STATE = {\n  INITIALIZED: 'initialized',\n  CONNECTING: 'connecting',\n  CONNECTED: 'connected',\n  CLOSED: 'closed',\n  RECONNECTING: 'reconnecting',\n  DISCONNECTED: 'disconnected'\n}; // The event type the LiveQuery client should sent to server\n\nvar OP_TYPES = {\n  CONNECT: 'connect',\n  SUBSCRIBE: 'subscribe',\n  UNSUBSCRIBE: 'unsubscribe',\n  ERROR: 'error'\n}; // The event we get back from LiveQuery server\n\nvar OP_EVENTS = {\n  CONNECTED: 'connected',\n  SUBSCRIBED: 'subscribed',\n  UNSUBSCRIBED: 'unsubscribed',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n}; // The event the LiveQuery client should emit\n\nvar CLIENT_EMMITER_TYPES = {\n  CLOSE: 'close',\n  ERROR: 'error',\n  OPEN: 'open'\n}; // The event the LiveQuery subscription should emit\n\nvar SUBSCRIPTION_EMMITER_TYPES = {\n  OPEN: 'open',\n  CLOSE: 'close',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n};\n\nvar generateInterval = function (k) {\n  return Math.random() * Math.min(30, Math.pow(2, k) - 1) * 1000;\n};\n/**\n * Creates a new LiveQueryClient.\n * Extends events.EventEmitter\n * <a href=\"https://nodejs.org/api/events.html#events_class_eventemitter\">cloud functions</a>.\n *\n * A wrapper of a standard WebSocket client. We add several useful methods to\n * help you connect/disconnect to LiveQueryServer, subscribe/unsubscribe a ParseQuery easily.\n *\n * javascriptKey and masterKey are used for verifying the LiveQueryClient when it tries\n * to connect to the LiveQuery server\n *\n * We expose three events to help you monitor the status of the LiveQueryClient.\n *\n * <pre>\n * let Parse = require('parse/node');\n * let LiveQueryClient = Parse.LiveQueryClient;\n * let client = new LiveQueryClient({\n *   applicationId: '',\n *   serverURL: '',\n *   javascriptKey: '',\n *   masterKey: ''\n *  });\n * </pre>\n *\n * Open - When we establish the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('open', () => {\n *\n * });</pre>\n *\n * Close - When we lose the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('close', () => {\n *\n * });</pre>\n *\n * Error - When some network error or LiveQuery server error happens, you'll get this event.\n * <pre>\n * client.on('error', (error) => {\n *\n * });</pre>\n *\n * @alias Parse.LiveQueryClient\n */\n\n\nvar LiveQueryClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2.default)(LiveQueryClient, _EventEmitter);\n\n  var _super = _createSuper(LiveQueryClient);\n  /**\n   * @param {object} options\n   * @param {string} options.applicationId - applicationId of your Parse app\n   * @param {string} options.serverURL - <b>the URL of your LiveQuery server</b>\n   * @param {string} options.javascriptKey (optional)\n   * @param {string} options.masterKey (optional) Your Parse Master Key. (Node.js only!)\n   * @param {string} options.sessionToken (optional)\n   * @param {string} options.installationId (optional)\n   */\n\n\n  function LiveQueryClient(_ref) {\n    var _this;\n\n    var applicationId = _ref.applicationId,\n        serverURL = _ref.serverURL,\n        javascriptKey = _ref.javascriptKey,\n        masterKey = _ref.masterKey,\n        sessionToken = _ref.sessionToken,\n        installationId = _ref.installationId;\n    (0, _classCallCheck2.default)(this, LiveQueryClient);\n    _this = _super.call(this);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"attempts\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"id\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"requestId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"applicationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"serverURL\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"javascriptKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"masterKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"sessionToken\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"installationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"additionalProperties\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"connectPromise\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"subscriptions\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"socket\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", void 0);\n\n    if (!serverURL || (0, _indexOf.default)(serverURL).call(serverURL, 'ws') !== 0) {\n      throw new Error('You need to set a proper Parse LiveQuery server url before using LiveQueryClient');\n    }\n\n    _this.reconnectHandle = null;\n    _this.attempts = 1;\n    _this.id = 0;\n    _this.requestId = 1;\n    _this.serverURL = serverURL;\n    _this.applicationId = applicationId;\n    _this.javascriptKey = javascriptKey || undefined;\n    _this.masterKey = masterKey || undefined;\n    _this.sessionToken = sessionToken || undefined;\n    _this.installationId = installationId || undefined;\n    _this.additionalProperties = true;\n    _this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n    _this.subscriptions = new _map.default();\n    _this.state = CLIENT_STATE.INITIALIZED; // adding listener so process does not crash\n    // best practice is for developer to register their own listener\n\n    _this.on('error', function () {});\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(LiveQueryClient, [{\n    key: \"shouldOpen\",\n    value: function ()\n    /*: any*/\n    {\n      return this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED;\n    }\n    /**\n     * Subscribes to a ParseQuery\n     *\n     * If you provide the sessionToken, when the LiveQuery server gets ParseObject's\n     * updates from parse server, it'll try to check whether the sessionToken fulfills\n     * the ParseObject's ACL. The LiveQuery server will only send updates to clients whose\n     * sessionToken is fit for the ParseObject's ACL. You can check the LiveQuery protocol\n     * <a href=\"https://github.com/parse-community/parse-server/wiki/Parse-LiveQuery-Protocol-Specification\">here</a> for more details. The subscription you get is the same subscription you get\n     * from our Standard API.\n     *\n     * @param {object} query - the ParseQuery you want to subscribe to\n     * @param {string} sessionToken (optional)\n     * @returns {LiveQuerySubscription} subscription\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function (query\n    /*: Object*/\n    , sessionToken\n    /*: ?string*/\n    )\n    /*: LiveQuerySubscription*/\n    {\n      var _this2 = this;\n\n      if (!query) {\n        return;\n      }\n\n      var className = query.className;\n      var queryJSON = query.toJSON();\n      var where = queryJSON.where;\n      var fields = (0, _keys.default)(queryJSON) ? (0, _keys.default)(queryJSON).split(',') : undefined;\n      var subscribeRequest = {\n        op: OP_TYPES.SUBSCRIBE,\n        requestId: this.requestId,\n        query: {\n          className: className,\n          where: where,\n          fields: fields\n        }\n      };\n\n      if (sessionToken) {\n        subscribeRequest.sessionToken = sessionToken;\n      }\n\n      var subscription = new _LiveQuerySubscription.default(this.requestId, query, sessionToken);\n      this.subscriptions.set(this.requestId, subscription);\n      this.requestId += 1;\n      this.connectPromise.then(function () {\n        _this2.socket.send((0, _stringify.default)(subscribeRequest));\n      });\n      return subscription;\n    }\n    /**\n     * After calling unsubscribe you'll stop receiving events from the subscription object.\n     *\n     * @param {object} subscription - subscription you would like to unsubscribe from.\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function (subscription\n    /*: Object*/\n    ) {\n      var _this3 = this;\n\n      if (!subscription) {\n        return;\n      }\n\n      this.subscriptions.delete(subscription.id);\n      var unsubscribeRequest = {\n        op: OP_TYPES.UNSUBSCRIBE,\n        requestId: subscription.id\n      };\n      this.connectPromise.then(function () {\n        _this3.socket.send((0, _stringify.default)(unsubscribeRequest));\n      });\n    }\n    /**\n     * After open is called, the LiveQueryClient will try to send a connect request\n     * to the LiveQuery server.\n     *\n     */\n\n  }, {\n    key: \"open\",\n    value: function () {\n      var _this4 = this;\n\n      var WebSocketImplementation = _CoreManager.default.getWebSocketController();\n\n      if (!WebSocketImplementation) {\n        this.emit(CLIENT_EMMITER_TYPES.ERROR, 'Can not find WebSocket implementation');\n        return;\n      }\n\n      if (this.state !== CLIENT_STATE.RECONNECTING) {\n        this.state = CLIENT_STATE.CONNECTING;\n      }\n\n      this.socket = new WebSocketImplementation(this.serverURL); // Bind WebSocket callbacks\n\n      this.socket.onopen = function () {\n        _this4._handleWebSocketOpen();\n      };\n\n      this.socket.onmessage = function (event) {\n        _this4._handleWebSocketMessage(event);\n      };\n\n      this.socket.onclose = function () {\n        _this4._handleWebSocketClose();\n      };\n\n      this.socket.onerror = function (error) {\n        _this4._handleWebSocketError(error);\n      };\n    }\n  }, {\n    key: \"resubscribe\",\n    value: function () {\n      var _context,\n          _this5 = this;\n\n      (0, _forEach.default)(_context = this.subscriptions).call(_context, function (subscription, requestId) {\n        var query = subscription.query;\n        var queryJSON = query.toJSON();\n        var where = queryJSON.where;\n        var fields = (0, _keys.default)(queryJSON) ? (0, _keys.default)(queryJSON).split(',') : undefined;\n        var className = query.className;\n        var sessionToken = subscription.sessionToken;\n        var subscribeRequest = {\n          op: OP_TYPES.SUBSCRIBE,\n          requestId: requestId,\n          query: {\n            className: className,\n            where: where,\n            fields: fields\n          }\n        };\n\n        if (sessionToken) {\n          subscribeRequest.sessionToken = sessionToken;\n        }\n\n        _this5.connectPromise.then(function () {\n          _this5.socket.send((0, _stringify.default)(subscribeRequest));\n        });\n      });\n    }\n    /**\n     * This method will close the WebSocket connection to this LiveQueryClient,\n     * cancel the auto reconnect and unsubscribe all subscriptions based on it.\n     *\n     */\n\n  }, {\n    key: \"close\",\n    value: function () {\n      var _context2;\n\n      if (this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.DISCONNECTED;\n      this.socket.close(); // Notify each subscription about the close\n\n      var _iterator = _createForOfIteratorHelper((0, _values.default)(_context2 = this.subscriptions).call(_context2)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var subscription = _step.value;\n          subscription.subscribed = false;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this._handleReset();\n\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE);\n    } // ensure we start with valid state if connect is called again after close\n\n  }, {\n    key: \"_handleReset\",\n    value: function () {\n      this.attempts = 1;\n      this.id = 0;\n      this.requestId = 1;\n      this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n      this.subscriptions = new _map.default();\n    }\n  }, {\n    key: \"_handleWebSocketOpen\",\n    value: function () {\n      this.attempts = 1;\n      var connectRequest = {\n        op: OP_TYPES.CONNECT,\n        applicationId: this.applicationId,\n        javascriptKey: this.javascriptKey,\n        masterKey: this.masterKey,\n        sessionToken: this.sessionToken\n      };\n\n      if (this.additionalProperties) {\n        connectRequest.installationId = this.installationId;\n      }\n\n      this.socket.send((0, _stringify.default)(connectRequest));\n    }\n  }, {\n    key: \"_handleWebSocketMessage\",\n    value: function (event\n    /*: any*/\n    ) {\n      var data = event.data;\n\n      if (typeof data === 'string') {\n        data = JSON.parse(data);\n      }\n\n      var subscription = null;\n\n      if (data.requestId) {\n        subscription = this.subscriptions.get(data.requestId);\n      }\n\n      var response = {\n        clientId: data.clientId,\n        installationId: data.installationId\n      };\n\n      switch (data.op) {\n        case OP_EVENTS.CONNECTED:\n          if (this.state === CLIENT_STATE.RECONNECTING) {\n            this.resubscribe();\n          }\n\n          this.emit(CLIENT_EMMITER_TYPES.OPEN);\n          this.id = data.clientId;\n          this.connectPromise.resolve();\n          this.state = CLIENT_STATE.CONNECTED;\n          break;\n\n        case OP_EVENTS.SUBSCRIBED:\n          if (subscription) {\n            subscription.subscribed = true;\n            subscription.subscribePromise.resolve();\n            (0, _setTimeout2.default)(function () {\n              return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.OPEN, response);\n            }, 200);\n          }\n\n          break;\n\n        case OP_EVENTS.ERROR:\n          if (data.requestId) {\n            if (subscription) {\n              subscription.subscribePromise.resolve();\n              (0, _setTimeout2.default)(function () {\n                return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, data.error);\n              }, 200);\n            }\n          } else {\n            this.emit(CLIENT_EMMITER_TYPES.ERROR, data.error);\n          }\n\n          if (data.error === 'Additional properties not allowed') {\n            this.additionalProperties = false;\n          }\n\n          if (data.reconnect) {\n            this._handleReconnect();\n          }\n\n          break;\n\n        case OP_EVENTS.UNSUBSCRIBED:\n          // We have already deleted subscription in unsubscribe(), do nothing here\n          break;\n\n        default:\n          {\n            // create, update, enter, leave, delete cases\n            if (!subscription) {\n              break;\n            }\n\n            var override = false;\n\n            if (data.original) {\n              override = true;\n              delete data.original.__type; // Check for removed fields\n\n              for (var field in data.original) {\n                if (!(field in data.object)) {\n                  data.object[field] = undefined;\n                }\n              }\n\n              data.original = _ParseObject.default.fromJSON(data.original, false);\n            }\n\n            delete data.object.__type;\n\n            var parseObject = _ParseObject.default.fromJSON(data.object, override);\n\n            if (data.original) {\n              subscription.emit(data.op, parseObject, data.original, response);\n            } else {\n              subscription.emit(data.op, parseObject, response);\n            }\n\n            var localDatastore = _CoreManager.default.getLocalDatastore();\n\n            if (override && localDatastore.isEnabled) {\n              localDatastore._updateObjectIfPinned(parseObject).then(function () {});\n            }\n          }\n      }\n    }\n  }, {\n    key: \"_handleWebSocketClose\",\n    value: function () {\n      var _context3;\n\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.CLOSED;\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE); // Notify each subscription about the close\n\n      var _iterator2 = _createForOfIteratorHelper((0, _values.default)(_context3 = this.subscriptions).call(_context3)),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var subscription = _step2.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleWebSocketError\",\n    value: function (error\n    /*: any*/\n    ) {\n      var _context4;\n\n      this.emit(CLIENT_EMMITER_TYPES.ERROR, error);\n\n      var _iterator3 = _createForOfIteratorHelper((0, _values.default)(_context4 = this.subscriptions).call(_context4)),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var subscription = _step3.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, error);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleReconnect\",\n    value: function () {\n      var _context5,\n          _this6 = this; // if closed or currently reconnecting we stop attempting to reconnect\n\n\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.RECONNECTING;\n      var time = generateInterval(this.attempts); // handle case when both close/error occur at frequent rates we ensure we do not reconnect unnecessarily.\n      // we're unable to distinguish different between close/error when we're unable to reconnect therefore\n      // we try to reconnect in both cases\n      // server side ws and browser WebSocket behave differently in when close/error get triggered\n\n      if (this.reconnectHandle) {\n        clearTimeout(this.reconnectHandle);\n      }\n\n      this.reconnectHandle = (0, _setTimeout2.default)((0, _bind.default)(_context5 = function () {\n        _this6.attempts++;\n        _this6.connectPromise = (0, _promiseUtils.resolvingPromise)();\n\n        _this6.open();\n      }).call(_context5, this), time);\n    }\n  }]);\n  return LiveQueryClient;\n}(_EventEmitter2.default);\n\n_CoreManager.default.setWebSocketController(typeof WebSocket === 'function' || (typeof WebSocket === \"undefined\" ? \"undefined\" : (0, _typeof2.default)(WebSocket)) === 'object' ? WebSocket : null);\n\nvar _default = LiveQueryClient;\nexports.default = _default;","map":{"version":3,"names":["_Reflect$construct","require","_sliceInstanceProperty","_Array$from","_Symbol","_getIteratorMethod","_Array$isArray","_Object$defineProperty","_interopRequireDefault","exports","value","default","_indexOf","_map","_keys","_stringify","_forEach","_values","_setTimeout2","_bind","_typeof2","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_defineProperty2","_CoreManager","_EventEmitter2","_ParseObject","_LiveQuerySubscription","_promiseUtils","_createForOfIteratorHelper","o","allowArrayLike","it","_unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_context6","_arrayLikeToArray","Object","prototype","toString","constructor","name","test","arr","len","arr2","Array","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","result","NewTarget","arguments","apply","Reflect","sham","Proxy","Boolean","valueOf","CLIENT_STATE","INITIALIZED","CONNECTING","CONNECTED","CLOSED","RECONNECTING","DISCONNECTED","OP_TYPES","CONNECT","SUBSCRIBE","UNSUBSCRIBE","ERROR","OP_EVENTS","SUBSCRIBED","UNSUBSCRIBED","CREATE","UPDATE","ENTER","LEAVE","DELETE","CLIENT_EMMITER_TYPES","CLOSE","OPEN","SUBSCRIPTION_EMMITER_TYPES","generateInterval","k","Math","random","min","pow","LiveQueryClient","_EventEmitter","_super","_ref","_this","applicationId","serverURL","javascriptKey","masterKey","sessionToken","installationId","Error","reconnectHandle","attempts","id","requestId","undefined","additionalProperties","connectPromise","resolvingPromise","subscriptions","state","on","key","query","_this2","className","queryJSON","toJSON","where","fields","split","subscribeRequest","op","subscription","set","then","socket","send","_this3","delete","unsubscribeRequest","_this4","WebSocketImplementation","getWebSocketController","emit","onopen","_handleWebSocketOpen","onmessage","event","_handleWebSocketMessage","onclose","_handleWebSocketClose","onerror","error","_handleWebSocketError","_context","_this5","_context2","close","_iterator","_step","subscribed","_handleReset","connectRequest","data","JSON","parse","get","response","clientId","resubscribe","resolve","subscribePromise","reconnect","_handleReconnect","override","original","__type","field","object","fromJSON","parseObject","localDatastore","getLocalDatastore","isEnabled","_updateObjectIfPinned","_context3","_iterator2","_step2","_context4","_iterator3","_step3","_context5","_this6","time","clearTimeout","open","setWebSocketController","WebSocket","_default"],"sources":["E:/intoweb3/NBlockment/blockment/node_modules/moralis/lib/browser/LiveQueryClient.js"],"sourcesContent":["\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\");\n\nvar _sliceInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\n\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\n\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\n\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\n\nvar _Array$isArray = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/map\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/keys\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _values = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/values\"));\n\nvar _setTimeout2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/set-timeout\"));\n\nvar _bind = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/bind\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _EventEmitter2 = _interopRequireDefault(require(\"./EventEmitter\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _LiveQuerySubscription = _interopRequireDefault(require(\"./LiveQuerySubscription\"));\n\nvar _promiseUtils = require(\"./promiseUtils\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n\n  if (!it) {\n    if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context6;\n\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n\n  var n = _sliceInstanceProperty(_context6 = Object.prototype.toString.call(o)).call(_context6, 8, -1);\n\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n} // The LiveQuery client inner state\n\n\nvar CLIENT_STATE = {\n  INITIALIZED: 'initialized',\n  CONNECTING: 'connecting',\n  CONNECTED: 'connected',\n  CLOSED: 'closed',\n  RECONNECTING: 'reconnecting',\n  DISCONNECTED: 'disconnected'\n}; // The event type the LiveQuery client should sent to server\n\nvar OP_TYPES = {\n  CONNECT: 'connect',\n  SUBSCRIBE: 'subscribe',\n  UNSUBSCRIBE: 'unsubscribe',\n  ERROR: 'error'\n}; // The event we get back from LiveQuery server\n\nvar OP_EVENTS = {\n  CONNECTED: 'connected',\n  SUBSCRIBED: 'subscribed',\n  UNSUBSCRIBED: 'unsubscribed',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n}; // The event the LiveQuery client should emit\n\nvar CLIENT_EMMITER_TYPES = {\n  CLOSE: 'close',\n  ERROR: 'error',\n  OPEN: 'open'\n}; // The event the LiveQuery subscription should emit\n\nvar SUBSCRIPTION_EMMITER_TYPES = {\n  OPEN: 'open',\n  CLOSE: 'close',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n};\n\nvar generateInterval = function (k) {\n  return Math.random() * Math.min(30, Math.pow(2, k) - 1) * 1000;\n};\n/**\n * Creates a new LiveQueryClient.\n * Extends events.EventEmitter\n * <a href=\"https://nodejs.org/api/events.html#events_class_eventemitter\">cloud functions</a>.\n *\n * A wrapper of a standard WebSocket client. We add several useful methods to\n * help you connect/disconnect to LiveQueryServer, subscribe/unsubscribe a ParseQuery easily.\n *\n * javascriptKey and masterKey are used for verifying the LiveQueryClient when it tries\n * to connect to the LiveQuery server\n *\n * We expose three events to help you monitor the status of the LiveQueryClient.\n *\n * <pre>\n * let Parse = require('parse/node');\n * let LiveQueryClient = Parse.LiveQueryClient;\n * let client = new LiveQueryClient({\n *   applicationId: '',\n *   serverURL: '',\n *   javascriptKey: '',\n *   masterKey: ''\n *  });\n * </pre>\n *\n * Open - When we establish the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('open', () => {\n *\n * });</pre>\n *\n * Close - When we lose the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('close', () => {\n *\n * });</pre>\n *\n * Error - When some network error or LiveQuery server error happens, you'll get this event.\n * <pre>\n * client.on('error', (error) => {\n *\n * });</pre>\n *\n * @alias Parse.LiveQueryClient\n */\n\n\nvar LiveQueryClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2.default)(LiveQueryClient, _EventEmitter);\n\n  var _super = _createSuper(LiveQueryClient);\n  /**\n   * @param {object} options\n   * @param {string} options.applicationId - applicationId of your Parse app\n   * @param {string} options.serverURL - <b>the URL of your LiveQuery server</b>\n   * @param {string} options.javascriptKey (optional)\n   * @param {string} options.masterKey (optional) Your Parse Master Key. (Node.js only!)\n   * @param {string} options.sessionToken (optional)\n   * @param {string} options.installationId (optional)\n   */\n\n\n  function LiveQueryClient(_ref) {\n    var _this;\n\n    var applicationId = _ref.applicationId,\n        serverURL = _ref.serverURL,\n        javascriptKey = _ref.javascriptKey,\n        masterKey = _ref.masterKey,\n        sessionToken = _ref.sessionToken,\n        installationId = _ref.installationId;\n    (0, _classCallCheck2.default)(this, LiveQueryClient);\n    _this = _super.call(this);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"attempts\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"id\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"requestId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"applicationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"serverURL\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"javascriptKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"masterKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"sessionToken\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"installationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"additionalProperties\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"connectPromise\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"subscriptions\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"socket\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", void 0);\n\n    if (!serverURL || (0, _indexOf.default)(serverURL).call(serverURL, 'ws') !== 0) {\n      throw new Error('You need to set a proper Parse LiveQuery server url before using LiveQueryClient');\n    }\n\n    _this.reconnectHandle = null;\n    _this.attempts = 1;\n    _this.id = 0;\n    _this.requestId = 1;\n    _this.serverURL = serverURL;\n    _this.applicationId = applicationId;\n    _this.javascriptKey = javascriptKey || undefined;\n    _this.masterKey = masterKey || undefined;\n    _this.sessionToken = sessionToken || undefined;\n    _this.installationId = installationId || undefined;\n    _this.additionalProperties = true;\n    _this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n    _this.subscriptions = new _map.default();\n    _this.state = CLIENT_STATE.INITIALIZED; // adding listener so process does not crash\n    // best practice is for developer to register their own listener\n\n    _this.on('error', function () {});\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(LiveQueryClient, [{\n    key: \"shouldOpen\",\n    value: function ()\n    /*: any*/\n    {\n      return this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED;\n    }\n    /**\n     * Subscribes to a ParseQuery\n     *\n     * If you provide the sessionToken, when the LiveQuery server gets ParseObject's\n     * updates from parse server, it'll try to check whether the sessionToken fulfills\n     * the ParseObject's ACL. The LiveQuery server will only send updates to clients whose\n     * sessionToken is fit for the ParseObject's ACL. You can check the LiveQuery protocol\n     * <a href=\"https://github.com/parse-community/parse-server/wiki/Parse-LiveQuery-Protocol-Specification\">here</a> for more details. The subscription you get is the same subscription you get\n     * from our Standard API.\n     *\n     * @param {object} query - the ParseQuery you want to subscribe to\n     * @param {string} sessionToken (optional)\n     * @returns {LiveQuerySubscription} subscription\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function (query\n    /*: Object*/\n    , sessionToken\n    /*: ?string*/\n    )\n    /*: LiveQuerySubscription*/\n    {\n      var _this2 = this;\n\n      if (!query) {\n        return;\n      }\n\n      var className = query.className;\n      var queryJSON = query.toJSON();\n      var where = queryJSON.where;\n      var fields = (0, _keys.default)(queryJSON) ? (0, _keys.default)(queryJSON).split(',') : undefined;\n      var subscribeRequest = {\n        op: OP_TYPES.SUBSCRIBE,\n        requestId: this.requestId,\n        query: {\n          className: className,\n          where: where,\n          fields: fields\n        }\n      };\n\n      if (sessionToken) {\n        subscribeRequest.sessionToken = sessionToken;\n      }\n\n      var subscription = new _LiveQuerySubscription.default(this.requestId, query, sessionToken);\n      this.subscriptions.set(this.requestId, subscription);\n      this.requestId += 1;\n      this.connectPromise.then(function () {\n        _this2.socket.send((0, _stringify.default)(subscribeRequest));\n      });\n      return subscription;\n    }\n    /**\n     * After calling unsubscribe you'll stop receiving events from the subscription object.\n     *\n     * @param {object} subscription - subscription you would like to unsubscribe from.\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function (subscription\n    /*: Object*/\n    ) {\n      var _this3 = this;\n\n      if (!subscription) {\n        return;\n      }\n\n      this.subscriptions.delete(subscription.id);\n      var unsubscribeRequest = {\n        op: OP_TYPES.UNSUBSCRIBE,\n        requestId: subscription.id\n      };\n      this.connectPromise.then(function () {\n        _this3.socket.send((0, _stringify.default)(unsubscribeRequest));\n      });\n    }\n    /**\n     * After open is called, the LiveQueryClient will try to send a connect request\n     * to the LiveQuery server.\n     *\n     */\n\n  }, {\n    key: \"open\",\n    value: function () {\n      var _this4 = this;\n\n      var WebSocketImplementation = _CoreManager.default.getWebSocketController();\n\n      if (!WebSocketImplementation) {\n        this.emit(CLIENT_EMMITER_TYPES.ERROR, 'Can not find WebSocket implementation');\n        return;\n      }\n\n      if (this.state !== CLIENT_STATE.RECONNECTING) {\n        this.state = CLIENT_STATE.CONNECTING;\n      }\n\n      this.socket = new WebSocketImplementation(this.serverURL); // Bind WebSocket callbacks\n\n      this.socket.onopen = function () {\n        _this4._handleWebSocketOpen();\n      };\n\n      this.socket.onmessage = function (event) {\n        _this4._handleWebSocketMessage(event);\n      };\n\n      this.socket.onclose = function () {\n        _this4._handleWebSocketClose();\n      };\n\n      this.socket.onerror = function (error) {\n        _this4._handleWebSocketError(error);\n      };\n    }\n  }, {\n    key: \"resubscribe\",\n    value: function () {\n      var _context,\n          _this5 = this;\n\n      (0, _forEach.default)(_context = this.subscriptions).call(_context, function (subscription, requestId) {\n        var query = subscription.query;\n        var queryJSON = query.toJSON();\n        var where = queryJSON.where;\n        var fields = (0, _keys.default)(queryJSON) ? (0, _keys.default)(queryJSON).split(',') : undefined;\n        var className = query.className;\n        var sessionToken = subscription.sessionToken;\n        var subscribeRequest = {\n          op: OP_TYPES.SUBSCRIBE,\n          requestId: requestId,\n          query: {\n            className: className,\n            where: where,\n            fields: fields\n          }\n        };\n\n        if (sessionToken) {\n          subscribeRequest.sessionToken = sessionToken;\n        }\n\n        _this5.connectPromise.then(function () {\n          _this5.socket.send((0, _stringify.default)(subscribeRequest));\n        });\n      });\n    }\n    /**\n     * This method will close the WebSocket connection to this LiveQueryClient,\n     * cancel the auto reconnect and unsubscribe all subscriptions based on it.\n     *\n     */\n\n  }, {\n    key: \"close\",\n    value: function () {\n      var _context2;\n\n      if (this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.DISCONNECTED;\n      this.socket.close(); // Notify each subscription about the close\n\n      var _iterator = _createForOfIteratorHelper((0, _values.default)(_context2 = this.subscriptions).call(_context2)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var subscription = _step.value;\n          subscription.subscribed = false;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this._handleReset();\n\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE);\n    } // ensure we start with valid state if connect is called again after close\n\n  }, {\n    key: \"_handleReset\",\n    value: function () {\n      this.attempts = 1;\n      this.id = 0;\n      this.requestId = 1;\n      this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n      this.subscriptions = new _map.default();\n    }\n  }, {\n    key: \"_handleWebSocketOpen\",\n    value: function () {\n      this.attempts = 1;\n      var connectRequest = {\n        op: OP_TYPES.CONNECT,\n        applicationId: this.applicationId,\n        javascriptKey: this.javascriptKey,\n        masterKey: this.masterKey,\n        sessionToken: this.sessionToken\n      };\n\n      if (this.additionalProperties) {\n        connectRequest.installationId = this.installationId;\n      }\n\n      this.socket.send((0, _stringify.default)(connectRequest));\n    }\n  }, {\n    key: \"_handleWebSocketMessage\",\n    value: function (event\n    /*: any*/\n    ) {\n      var data = event.data;\n\n      if (typeof data === 'string') {\n        data = JSON.parse(data);\n      }\n\n      var subscription = null;\n\n      if (data.requestId) {\n        subscription = this.subscriptions.get(data.requestId);\n      }\n\n      var response = {\n        clientId: data.clientId,\n        installationId: data.installationId\n      };\n\n      switch (data.op) {\n        case OP_EVENTS.CONNECTED:\n          if (this.state === CLIENT_STATE.RECONNECTING) {\n            this.resubscribe();\n          }\n\n          this.emit(CLIENT_EMMITER_TYPES.OPEN);\n          this.id = data.clientId;\n          this.connectPromise.resolve();\n          this.state = CLIENT_STATE.CONNECTED;\n          break;\n\n        case OP_EVENTS.SUBSCRIBED:\n          if (subscription) {\n            subscription.subscribed = true;\n            subscription.subscribePromise.resolve();\n            (0, _setTimeout2.default)(function () {\n              return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.OPEN, response);\n            }, 200);\n          }\n\n          break;\n\n        case OP_EVENTS.ERROR:\n          if (data.requestId) {\n            if (subscription) {\n              subscription.subscribePromise.resolve();\n              (0, _setTimeout2.default)(function () {\n                return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, data.error);\n              }, 200);\n            }\n          } else {\n            this.emit(CLIENT_EMMITER_TYPES.ERROR, data.error);\n          }\n\n          if (data.error === 'Additional properties not allowed') {\n            this.additionalProperties = false;\n          }\n\n          if (data.reconnect) {\n            this._handleReconnect();\n          }\n\n          break;\n\n        case OP_EVENTS.UNSUBSCRIBED:\n          // We have already deleted subscription in unsubscribe(), do nothing here\n          break;\n\n        default:\n          {\n            // create, update, enter, leave, delete cases\n            if (!subscription) {\n              break;\n            }\n\n            var override = false;\n\n            if (data.original) {\n              override = true;\n              delete data.original.__type; // Check for removed fields\n\n              for (var field in data.original) {\n                if (!(field in data.object)) {\n                  data.object[field] = undefined;\n                }\n              }\n\n              data.original = _ParseObject.default.fromJSON(data.original, false);\n            }\n\n            delete data.object.__type;\n\n            var parseObject = _ParseObject.default.fromJSON(data.object, override);\n\n            if (data.original) {\n              subscription.emit(data.op, parseObject, data.original, response);\n            } else {\n              subscription.emit(data.op, parseObject, response);\n            }\n\n            var localDatastore = _CoreManager.default.getLocalDatastore();\n\n            if (override && localDatastore.isEnabled) {\n              localDatastore._updateObjectIfPinned(parseObject).then(function () {});\n            }\n          }\n      }\n    }\n  }, {\n    key: \"_handleWebSocketClose\",\n    value: function () {\n      var _context3;\n\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.CLOSED;\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE); // Notify each subscription about the close\n\n      var _iterator2 = _createForOfIteratorHelper((0, _values.default)(_context3 = this.subscriptions).call(_context3)),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var subscription = _step2.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleWebSocketError\",\n    value: function (error\n    /*: any*/\n    ) {\n      var _context4;\n\n      this.emit(CLIENT_EMMITER_TYPES.ERROR, error);\n\n      var _iterator3 = _createForOfIteratorHelper((0, _values.default)(_context4 = this.subscriptions).call(_context4)),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var subscription = _step3.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, error);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleReconnect\",\n    value: function () {\n      var _context5,\n          _this6 = this; // if closed or currently reconnecting we stop attempting to reconnect\n\n\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.RECONNECTING;\n      var time = generateInterval(this.attempts); // handle case when both close/error occur at frequent rates we ensure we do not reconnect unnecessarily.\n      // we're unable to distinguish different between close/error when we're unable to reconnect therefore\n      // we try to reconnect in both cases\n      // server side ws and browser WebSocket behave differently in when close/error get triggered\n\n      if (this.reconnectHandle) {\n        clearTimeout(this.reconnectHandle);\n      }\n\n      this.reconnectHandle = (0, _setTimeout2.default)((0, _bind.default)(_context5 = function () {\n        _this6.attempts++;\n        _this6.connectPromise = (0, _promiseUtils.resolvingPromise)();\n\n        _this6.open();\n      }).call(_context5, this), time);\n    }\n  }]);\n  return LiveQueryClient;\n}(_EventEmitter2.default);\n\n_CoreManager.default.setWebSocketController(typeof WebSocket === 'function' || (typeof WebSocket === \"undefined\" ? \"undefined\" : (0, _typeof2.default)(WebSocket)) === 'object' ? WebSocket : null);\n\nvar _default = LiveQueryClient;\nexports.default = _default;"],"mappings":"AAAA;;AAEA,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,yDAAD,CAAhC;;AAEA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,sDAAD,CAApC;;AAEA,IAAIE,WAAW,GAAGF,OAAO,CAAC,kDAAD,CAAzB;;AAEA,IAAIG,OAAO,GAAGH,OAAO,CAAC,8CAAD,CAArB;;AAEA,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,oDAAD,CAAhC;;AAEA,IAAIK,cAAc,GAAGL,OAAO,CAAC,sDAAD,CAA5B;;AAEA,IAAIM,sBAAsB,GAAGN,OAAO,CAAC,8DAAD,CAApC;;AAEA,IAAIO,sBAAsB,GAAGP,OAAO,CAAC,sDAAD,CAApC;;AAEAM,sBAAsB,CAACE,OAAD,EAAU,YAAV,EAAwB;EAC5CC,KAAK,EAAE;AADqC,CAAxB,CAAtB;;AAIAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,QAAQ,GAAGJ,sBAAsB,CAACP,OAAO,CAAC,yDAAD,CAAR,CAArC;;AAEA,IAAIY,IAAI,GAAGL,sBAAsB,CAACP,OAAO,CAAC,2CAAD,CAAR,CAAjC;;AAEA,IAAIa,KAAK,GAAGN,sBAAsB,CAACP,OAAO,CAAC,qDAAD,CAAR,CAAlC;;AAEA,IAAIc,UAAU,GAAGP,sBAAsB,CAACP,OAAO,CAAC,sDAAD,CAAR,CAAvC;;AAEA,IAAIe,QAAQ,GAAGR,sBAAsB,CAACP,OAAO,CAAC,yDAAD,CAAR,CAArC;;AAEA,IAAIgB,OAAO,GAAGT,sBAAsB,CAACP,OAAO,CAAC,uDAAD,CAAR,CAApC;;AAEA,IAAIiB,YAAY,GAAGV,sBAAsB,CAACP,OAAO,CAAC,mDAAD,CAAR,CAAzC;;AAEA,IAAIkB,KAAK,GAAGX,sBAAsB,CAACP,OAAO,CAAC,qDAAD,CAAR,CAAlC;;AAEA,IAAImB,QAAQ,GAAGZ,sBAAsB,CAACP,OAAO,CAAC,uCAAD,CAAR,CAArC;;AAEA,IAAIoB,gBAAgB,GAAGb,sBAAsB,CAACP,OAAO,CAAC,+CAAD,CAAR,CAA7C;;AAEA,IAAIqB,aAAa,GAAGd,sBAAsB,CAACP,OAAO,CAAC,4CAAD,CAAR,CAA1C;;AAEA,IAAIsB,uBAAuB,GAAGf,sBAAsB,CAACP,OAAO,CAAC,sDAAD,CAAR,CAApD;;AAEA,IAAIuB,UAAU,GAAGhB,sBAAsB,CAACP,OAAO,CAAC,yCAAD,CAAR,CAAvC;;AAEA,IAAIwB,2BAA2B,GAAGjB,sBAAsB,CAACP,OAAO,CAAC,0DAAD,CAAR,CAAxD;;AAEA,IAAIyB,gBAAgB,GAAGlB,sBAAsB,CAACP,OAAO,CAAC,+CAAD,CAAR,CAA7C;;AAEA,IAAI0B,gBAAgB,GAAGnB,sBAAsB,CAACP,OAAO,CAAC,+CAAD,CAAR,CAA7C;;AAEA,IAAI2B,YAAY,GAAGpB,sBAAsB,CAACP,OAAO,CAAC,eAAD,CAAR,CAAzC;;AAEA,IAAI4B,cAAc,GAAGrB,sBAAsB,CAACP,OAAO,CAAC,gBAAD,CAAR,CAA3C;;AAEA,IAAI6B,YAAY,GAAGtB,sBAAsB,CAACP,OAAO,CAAC,eAAD,CAAR,CAAzC;;AAEA,IAAI8B,sBAAsB,GAAGvB,sBAAsB,CAACP,OAAO,CAAC,yBAAD,CAAR,CAAnD;;AAEA,IAAI+B,aAAa,GAAG/B,OAAO,CAAC,gBAAD,CAA3B;;AAEA,SAASgC,0BAAT,CAAoCC,CAApC,EAAuCC,cAAvC,EAAuD;EACrD,IAAIC,EAAE,GAAG,OAAOhC,OAAP,KAAmB,WAAnB,IAAkCC,kBAAkB,CAAC6B,CAAD,CAApD,IAA2DA,CAAC,CAAC,YAAD,CAArE;;EAEA,IAAI,CAACE,EAAL,EAAS;IACP,IAAI9B,cAAc,CAAC4B,CAAD,CAAd,KAAsBE,EAAE,GAAGC,2BAA2B,CAACH,CAAD,CAAtD,KAA8DC,cAAc,IAAID,CAAlB,IAAuB,OAAOA,CAAC,CAACI,MAAT,KAAoB,QAA7G,EAAuH;MACrH,IAAIF,EAAJ,EAAQF,CAAC,GAAGE,EAAJ;MACR,IAAIG,CAAC,GAAG,CAAR;;MAEA,IAAIC,CAAC,GAAG,YAAY,CAAE,CAAtB;;MAEA,OAAO;QACLC,CAAC,EAAED,CADE;QAELE,CAAC,EAAE,YAAY;UACb,IAAIH,CAAC,IAAIL,CAAC,CAACI,MAAX,EAAmB,OAAO;YACxBK,IAAI,EAAE;UADkB,CAAP;UAGnB,OAAO;YACLA,IAAI,EAAE,KADD;YAELjC,KAAK,EAAEwB,CAAC,CAACK,CAAC,EAAF;UAFH,CAAP;QAID,CAVI;QAWLK,CAAC,EAAE,UAAUC,EAAV,EAAc;UACf,MAAMA,EAAN;QACD,CAbI;QAcLC,CAAC,EAAEN;MAdE,CAAP;IAgBD;;IAED,MAAM,IAAIO,SAAJ,CAAc,uIAAd,CAAN;EACD;;EAED,IAAIC,gBAAgB,GAAG,IAAvB;EAAA,IACIC,MAAM,GAAG,KADb;EAAA,IAEIC,GAFJ;EAGA,OAAO;IACLT,CAAC,EAAE,YAAY;MACbL,EAAE,GAAGA,EAAE,CAACe,IAAH,CAAQjB,CAAR,CAAL;IACD,CAHI;IAILQ,CAAC,EAAE,YAAY;MACb,IAAIU,IAAI,GAAGhB,EAAE,CAACiB,IAAH,EAAX;MACAL,gBAAgB,GAAGI,IAAI,CAACT,IAAxB;MACA,OAAOS,IAAP;IACD,CARI;IASLR,CAAC,EAAE,UAAUU,GAAV,EAAe;MAChBL,MAAM,GAAG,IAAT;MACAC,GAAG,GAAGI,GAAN;IACD,CAZI;IAaLR,CAAC,EAAE,YAAY;MACb,IAAI;QACF,IAAI,CAACE,gBAAD,IAAqBZ,EAAE,CAACmB,MAAH,IAAa,IAAtC,EAA4CnB,EAAE,CAACmB,MAAH;MAC7C,CAFD,SAEU;QACR,IAAIN,MAAJ,EAAY,MAAMC,GAAN;MACb;IACF;EAnBI,CAAP;AAqBD;;AAED,SAASb,2BAAT,CAAqCH,CAArC,EAAwCsB,MAAxC,EAAgD;EAC9C,IAAIC,SAAJ;;EAEA,IAAI,CAACvB,CAAL,EAAQ;EACR,IAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAOwB,iBAAiB,CAACxB,CAAD,EAAIsB,MAAJ,CAAxB;;EAE3B,IAAId,CAAC,GAAGxC,sBAAsB,CAACuD,SAAS,GAAGE,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BV,IAA1B,CAA+BjB,CAA/B,CAAb,CAAtB,CAAsEiB,IAAtE,CAA2EM,SAA3E,EAAsF,CAAtF,EAAyF,CAAC,CAA1F,CAAR;;EAEA,IAAIf,CAAC,KAAK,QAAN,IAAkBR,CAAC,CAAC4B,WAAxB,EAAqCpB,CAAC,GAAGR,CAAC,CAAC4B,WAAF,CAAcC,IAAlB;EACrC,IAAIrB,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAOvC,WAAW,CAAC+B,CAAD,CAAlB;EAChC,IAAIQ,CAAC,KAAK,WAAN,IAAqB,2CAA2CsB,IAA3C,CAAgDtB,CAAhD,CAAzB,EAA6E,OAAOgB,iBAAiB,CAACxB,CAAD,EAAIsB,MAAJ,CAAxB;AAC9E;;AAED,SAASE,iBAAT,CAA2BO,GAA3B,EAAgCC,GAAhC,EAAqC;EACnC,IAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGD,GAAG,CAAC3B,MAA7B,EAAqC4B,GAAG,GAAGD,GAAG,CAAC3B,MAAV;;EAErC,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAW4B,IAAI,GAAG,IAAIC,KAAJ,CAAUF,GAAV,CAAvB,EAAuC3B,CAAC,GAAG2B,GAA3C,EAAgD3B,CAAC,EAAjD,EAAqD;IACnD4B,IAAI,CAAC5B,CAAD,CAAJ,GAAU0B,GAAG,CAAC1B,CAAD,CAAb;EACD;;EAED,OAAO4B,IAAP;AACD;;AAED,SAASE,YAAT,CAAsBC,OAAtB,EAA+B;EAC7B,IAAIC,yBAAyB,GAAGC,yBAAyB,EAAzD;;EAEA,OAAO,YAAY;IACjB,IAAIC,KAAK,GAAG,CAAC,GAAG/C,gBAAgB,CAACf,OAArB,EAA8B2D,OAA9B,CAAZ;IAAA,IACII,MADJ;;IAGA,IAAIH,yBAAJ,EAA+B;MAC7B,IAAII,SAAS,GAAG,CAAC,GAAGjD,gBAAgB,CAACf,OAArB,EAA8B,IAA9B,EAAoCmD,WAApD;MACAY,MAAM,GAAG1E,kBAAkB,CAACyE,KAAD,EAAQG,SAAR,EAAmBD,SAAnB,CAA3B;IACD,CAHD,MAGO;MACLD,MAAM,GAAGD,KAAK,CAACI,KAAN,CAAY,IAAZ,EAAkBD,SAAlB,CAAT;IACD;;IAED,OAAO,CAAC,GAAGnD,2BAA2B,CAACd,OAAhC,EAAyC,IAAzC,EAA+C+D,MAA/C,CAAP;EACD,CAZD;AAaD;;AAED,SAASF,yBAAT,GAAqC;EACnC,IAAI,OAAOM,OAAP,KAAmB,WAAnB,IAAkC,CAAC9E,kBAAvC,EAA2D,OAAO,KAAP;EAC3D,IAAIA,kBAAkB,CAAC+E,IAAvB,EAA6B,OAAO,KAAP;EAC7B,IAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC,OAAO,IAAP;;EAEjC,IAAI;IACFC,OAAO,CAACrB,SAAR,CAAkBsB,OAAlB,CAA0B/B,IAA1B,CAA+BnD,kBAAkB,CAACiF,OAAD,EAAU,EAAV,EAAc,YAAY,CAAE,CAA5B,CAAjD;IACA,OAAO,IAAP;EACD,CAHD,CAGE,OAAOrC,CAAP,EAAU;IACV,OAAO,KAAP;EACD;AACF,C,CAAC;;;AAGF,IAAIuC,YAAY,GAAG;EACjBC,WAAW,EAAE,aADI;EAEjBC,UAAU,EAAE,YAFK;EAGjBC,SAAS,EAAE,WAHM;EAIjBC,MAAM,EAAE,QAJS;EAKjBC,YAAY,EAAE,cALG;EAMjBC,YAAY,EAAE;AANG,CAAnB,C,CAOG;;AAEH,IAAIC,QAAQ,GAAG;EACbC,OAAO,EAAE,SADI;EAEbC,SAAS,EAAE,WAFE;EAGbC,WAAW,EAAE,aAHA;EAIbC,KAAK,EAAE;AAJM,CAAf,C,CAKG;;AAEH,IAAIC,SAAS,GAAG;EACdT,SAAS,EAAE,WADG;EAEdU,UAAU,EAAE,YAFE;EAGdC,YAAY,EAAE,cAHA;EAIdH,KAAK,EAAE,OAJO;EAKdI,MAAM,EAAE,QALM;EAMdC,MAAM,EAAE,QANM;EAOdC,KAAK,EAAE,OAPO;EAQdC,KAAK,EAAE,OARO;EASdC,MAAM,EAAE;AATM,CAAhB,C,CAUG;;AAEH,IAAIC,oBAAoB,GAAG;EACzBC,KAAK,EAAE,OADkB;EAEzBV,KAAK,EAAE,OAFkB;EAGzBW,IAAI,EAAE;AAHmB,CAA3B,C,CAIG;;AAEH,IAAIC,0BAA0B,GAAG;EAC/BD,IAAI,EAAE,MADyB;EAE/BD,KAAK,EAAE,OAFwB;EAG/BV,KAAK,EAAE,OAHwB;EAI/BI,MAAM,EAAE,QAJuB;EAK/BC,MAAM,EAAE,QALuB;EAM/BC,KAAK,EAAE,OANwB;EAO/BC,KAAK,EAAE,OAPwB;EAQ/BC,MAAM,EAAE;AARuB,CAAjC;;AAWA,IAAIK,gBAAgB,GAAG,UAAUC,CAAV,EAAa;EAClC,OAAOC,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACE,GAAL,CAAS,EAAT,EAAaF,IAAI,CAACG,GAAL,CAAS,CAAT,EAAYJ,CAAZ,IAAiB,CAA9B,CAAhB,GAAmD,IAA1D;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIK,eAAe,GAAG,aAAa,UAAUC,aAAV,EAAyB;EAC1D,CAAC,GAAG1F,UAAU,CAACb,OAAf,EAAwBsG,eAAxB,EAAyCC,aAAzC;;EAEA,IAAIC,MAAM,GAAG9C,YAAY,CAAC4C,eAAD,CAAzB;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAGE,SAASA,eAAT,CAAyBG,IAAzB,EAA+B;IAC7B,IAAIC,KAAJ;;IAEA,IAAIC,aAAa,GAAGF,IAAI,CAACE,aAAzB;IAAA,IACIC,SAAS,GAAGH,IAAI,CAACG,SADrB;IAAA,IAEIC,aAAa,GAAGJ,IAAI,CAACI,aAFzB;IAAA,IAGIC,SAAS,GAAGL,IAAI,CAACK,SAHrB;IAAA,IAIIC,YAAY,GAAGN,IAAI,CAACM,YAJxB;IAAA,IAKIC,cAAc,GAAGP,IAAI,CAACO,cAL1B;IAMA,CAAC,GAAGtG,gBAAgB,CAACV,OAArB,EAA8B,IAA9B,EAAoCsG,eAApC;IACAI,KAAK,GAAGF,MAAM,CAAChE,IAAP,CAAY,IAAZ,CAAR;IACA,CAAC,GAAGxB,gBAAgB,CAAChB,OAArB,EAA8B,CAAC,GAAGY,uBAAuB,CAACZ,OAA5B,EAAqC0G,KAArC,CAA9B,EAA2E,UAA3E,EAAuF,KAAK,CAA5F;IACA,CAAC,GAAG1F,gBAAgB,CAAChB,OAArB,EAA8B,CAAC,GAAGY,uBAAuB,CAACZ,OAA5B,EAAqC0G,KAArC,CAA9B,EAA2E,IAA3E,EAAiF,KAAK,CAAtF;IACA,CAAC,GAAG1F,gBAAgB,CAAChB,OAArB,EAA8B,CAAC,GAAGY,uBAAuB,CAACZ,OAA5B,EAAqC0G,KAArC,CAA9B,EAA2E,WAA3E,EAAwF,KAAK,CAA7F;IACA,CAAC,GAAG1F,gBAAgB,CAAChB,OAArB,EAA8B,CAAC,GAAGY,uBAAuB,CAACZ,OAA5B,EAAqC0G,KAArC,CAA9B,EAA2E,eAA3E,EAA4F,KAAK,CAAjG;IACA,CAAC,GAAG1F,gBAAgB,CAAChB,OAArB,EAA8B,CAAC,GAAGY,uBAAuB,CAACZ,OAA5B,EAAqC0G,KAArC,CAA9B,EAA2E,WAA3E,EAAwF,KAAK,CAA7F;IACA,CAAC,GAAG1F,gBAAgB,CAAChB,OAArB,EAA8B,CAAC,GAAGY,uBAAuB,CAACZ,OAA5B,EAAqC0G,KAArC,CAA9B,EAA2E,eAA3E,EAA4F,KAAK,CAAjG;IACA,CAAC,GAAG1F,gBAAgB,CAAChB,OAArB,EAA8B,CAAC,GAAGY,uBAAuB,CAACZ,OAA5B,EAAqC0G,KAArC,CAA9B,EAA2E,WAA3E,EAAwF,KAAK,CAA7F;IACA,CAAC,GAAG1F,gBAAgB,CAAChB,OAArB,EAA8B,CAAC,GAAGY,uBAAuB,CAACZ,OAA5B,EAAqC0G,KAArC,CAA9B,EAA2E,cAA3E,EAA2F,KAAK,CAAhG;IACA,CAAC,GAAG1F,gBAAgB,CAAChB,OAArB,EAA8B,CAAC,GAAGY,uBAAuB,CAACZ,OAA5B,EAAqC0G,KAArC,CAA9B,EAA2E,gBAA3E,EAA6F,KAAK,CAAlG;IACA,CAAC,GAAG1F,gBAAgB,CAAChB,OAArB,EAA8B,CAAC,GAAGY,uBAAuB,CAACZ,OAA5B,EAAqC0G,KAArC,CAA9B,EAA2E,sBAA3E,EAAmG,KAAK,CAAxG;IACA,CAAC,GAAG1F,gBAAgB,CAAChB,OAArB,EAA8B,CAAC,GAAGY,uBAAuB,CAACZ,OAA5B,EAAqC0G,KAArC,CAA9B,EAA2E,gBAA3E,EAA6F,KAAK,CAAlG;IACA,CAAC,GAAG1F,gBAAgB,CAAChB,OAArB,EAA8B,CAAC,GAAGY,uBAAuB,CAACZ,OAA5B,EAAqC0G,KAArC,CAA9B,EAA2E,eAA3E,EAA4F,KAAK,CAAjG;IACA,CAAC,GAAG1F,gBAAgB,CAAChB,OAArB,EAA8B,CAAC,GAAGY,uBAAuB,CAACZ,OAA5B,EAAqC0G,KAArC,CAA9B,EAA2E,QAA3E,EAAqF,KAAK,CAA1F;IACA,CAAC,GAAG1F,gBAAgB,CAAChB,OAArB,EAA8B,CAAC,GAAGY,uBAAuB,CAACZ,OAA5B,EAAqC0G,KAArC,CAA9B,EAA2E,OAA3E,EAAoF,KAAK,CAAzF;;IAEA,IAAI,CAACE,SAAD,IAAc,CAAC,GAAG3G,QAAQ,CAACD,OAAb,EAAsB4G,SAAtB,EAAiCpE,IAAjC,CAAsCoE,SAAtC,EAAiD,IAAjD,MAA2D,CAA7E,EAAgF;MAC9E,MAAM,IAAIK,KAAJ,CAAU,kFAAV,CAAN;IACD;;IAEDP,KAAK,CAACQ,eAAN,GAAwB,IAAxB;IACAR,KAAK,CAACS,QAAN,GAAiB,CAAjB;IACAT,KAAK,CAACU,EAAN,GAAW,CAAX;IACAV,KAAK,CAACW,SAAN,GAAkB,CAAlB;IACAX,KAAK,CAACE,SAAN,GAAkBA,SAAlB;IACAF,KAAK,CAACC,aAAN,GAAsBA,aAAtB;IACAD,KAAK,CAACG,aAAN,GAAsBA,aAAa,IAAIS,SAAvC;IACAZ,KAAK,CAACI,SAAN,GAAkBA,SAAS,IAAIQ,SAA/B;IACAZ,KAAK,CAACK,YAAN,GAAqBA,YAAY,IAAIO,SAArC;IACAZ,KAAK,CAACM,cAAN,GAAuBA,cAAc,IAAIM,SAAzC;IACAZ,KAAK,CAACa,oBAAN,GAA6B,IAA7B;IACAb,KAAK,CAACc,cAAN,GAAuB,CAAC,GAAGnG,aAAa,CAACoG,gBAAlB,GAAvB;IACAf,KAAK,CAACgB,aAAN,GAAsB,IAAIxH,IAAI,CAACF,OAAT,EAAtB;IACA0G,KAAK,CAACiB,KAAN,GAAcnD,YAAY,CAACC,WAA3B,CA3C6B,CA2CW;IACxC;;IAEAiC,KAAK,CAACkB,EAAN,CAAS,OAAT,EAAkB,YAAY,CAAE,CAAhC;;IAEA,OAAOlB,KAAP;EACD;;EAED,CAAC,GAAG/F,aAAa,CAACX,OAAlB,EAA2BsG,eAA3B,EAA4C,CAAC;IAC3CuB,GAAG,EAAE,YADsC;IAE3C9H,KAAK,EAAE;IACP;IACA;MACE,OAAO,KAAK4H,KAAL,KAAenD,YAAY,CAACC,WAA5B,IAA2C,KAAKkD,KAAL,KAAenD,YAAY,CAACM,YAA9E;IACD;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EApB+C,CAAD,EAsBzC;IACD+C,GAAG,EAAE,WADJ;IAED9H,KAAK,EAAE,UAAU+H;IACjB;IADO,EAELf;IACF;IAHO;IAKP;IACA;MACE,IAAIgB,MAAM,GAAG,IAAb;;MAEA,IAAI,CAACD,KAAL,EAAY;QACV;MACD;;MAED,IAAIE,SAAS,GAAGF,KAAK,CAACE,SAAtB;MACA,IAAIC,SAAS,GAAGH,KAAK,CAACI,MAAN,EAAhB;MACA,IAAIC,KAAK,GAAGF,SAAS,CAACE,KAAtB;MACA,IAAIC,MAAM,GAAG,CAAC,GAAGjI,KAAK,CAACH,OAAV,EAAmBiI,SAAnB,IAAgC,CAAC,GAAG9H,KAAK,CAACH,OAAV,EAAmBiI,SAAnB,EAA8BI,KAA9B,CAAoC,GAApC,CAAhC,GAA2Ef,SAAxF;MACA,IAAIgB,gBAAgB,GAAG;QACrBC,EAAE,EAAExD,QAAQ,CAACE,SADQ;QAErBoC,SAAS,EAAE,KAAKA,SAFK;QAGrBS,KAAK,EAAE;UACLE,SAAS,EAAEA,SADN;UAELG,KAAK,EAAEA,KAFF;UAGLC,MAAM,EAAEA;QAHH;MAHc,CAAvB;;MAUA,IAAIrB,YAAJ,EAAkB;QAChBuB,gBAAgB,CAACvB,YAAjB,GAAgCA,YAAhC;MACD;;MAED,IAAIyB,YAAY,GAAG,IAAIpH,sBAAsB,CAACpB,OAA3B,CAAmC,KAAKqH,SAAxC,EAAmDS,KAAnD,EAA0Df,YAA1D,CAAnB;MACA,KAAKW,aAAL,CAAmBe,GAAnB,CAAuB,KAAKpB,SAA5B,EAAuCmB,YAAvC;MACA,KAAKnB,SAAL,IAAkB,CAAlB;MACA,KAAKG,cAAL,CAAoBkB,IAApB,CAAyB,YAAY;QACnCX,MAAM,CAACY,MAAP,CAAcC,IAAd,CAAmB,CAAC,GAAGxI,UAAU,CAACJ,OAAf,EAAwBsI,gBAAxB,CAAnB;MACD,CAFD;MAGA,OAAOE,YAAP;IACD;IACD;AACJ;AACA;AACA;AACA;;EA7CK,CAtByC,EAqEzC;IACDX,GAAG,EAAE,aADJ;IAED9H,KAAK,EAAE,UAAUyI;IACjB;IADO,EAEL;MACA,IAAIK,MAAM,GAAG,IAAb;;MAEA,IAAI,CAACL,YAAL,EAAmB;QACjB;MACD;;MAED,KAAKd,aAAL,CAAmBoB,MAAnB,CAA0BN,YAAY,CAACpB,EAAvC;MACA,IAAI2B,kBAAkB,GAAG;QACvBR,EAAE,EAAExD,QAAQ,CAACG,WADU;QAEvBmC,SAAS,EAAEmB,YAAY,CAACpB;MAFD,CAAzB;MAIA,KAAKI,cAAL,CAAoBkB,IAApB,CAAyB,YAAY;QACnCG,MAAM,CAACF,MAAP,CAAcC,IAAd,CAAmB,CAAC,GAAGxI,UAAU,CAACJ,OAAf,EAAwB+I,kBAAxB,CAAnB;MACD,CAFD;IAGD;IACD;AACJ;AACA;AACA;AACA;;EAxBK,CArEyC,EA+FzC;IACDlB,GAAG,EAAE,MADJ;IAED9H,KAAK,EAAE,YAAY;MACjB,IAAIiJ,MAAM,GAAG,IAAb;;MAEA,IAAIC,uBAAuB,GAAGhI,YAAY,CAACjB,OAAb,CAAqBkJ,sBAArB,EAA9B;;MAEA,IAAI,CAACD,uBAAL,EAA8B;QAC5B,KAAKE,IAAL,CAAUvD,oBAAoB,CAACT,KAA/B,EAAsC,uCAAtC;QACA;MACD;;MAED,IAAI,KAAKwC,KAAL,KAAenD,YAAY,CAACK,YAAhC,EAA8C;QAC5C,KAAK8C,KAAL,GAAanD,YAAY,CAACE,UAA1B;MACD;;MAED,KAAKiE,MAAL,GAAc,IAAIM,uBAAJ,CAA4B,KAAKrC,SAAjC,CAAd,CAdiB,CAc0C;;MAE3D,KAAK+B,MAAL,CAAYS,MAAZ,GAAqB,YAAY;QAC/BJ,MAAM,CAACK,oBAAP;MACD,CAFD;;MAIA,KAAKV,MAAL,CAAYW,SAAZ,GAAwB,UAAUC,KAAV,EAAiB;QACvCP,MAAM,CAACQ,uBAAP,CAA+BD,KAA/B;MACD,CAFD;;MAIA,KAAKZ,MAAL,CAAYc,OAAZ,GAAsB,YAAY;QAChCT,MAAM,CAACU,qBAAP;MACD,CAFD;;MAIA,KAAKf,MAAL,CAAYgB,OAAZ,GAAsB,UAAUC,KAAV,EAAiB;QACrCZ,MAAM,CAACa,qBAAP,CAA6BD,KAA7B;MACD,CAFD;IAGD;EAjCA,CA/FyC,EAiIzC;IACD/B,GAAG,EAAE,aADJ;IAED9H,KAAK,EAAE,YAAY;MACjB,IAAI+J,QAAJ;MAAA,IACIC,MAAM,GAAG,IADb;;MAGA,CAAC,GAAG1J,QAAQ,CAACL,OAAb,EAAsB8J,QAAQ,GAAG,KAAKpC,aAAtC,EAAqDlF,IAArD,CAA0DsH,QAA1D,EAAoE,UAAUtB,YAAV,EAAwBnB,SAAxB,EAAmC;QACrG,IAAIS,KAAK,GAAGU,YAAY,CAACV,KAAzB;QACA,IAAIG,SAAS,GAAGH,KAAK,CAACI,MAAN,EAAhB;QACA,IAAIC,KAAK,GAAGF,SAAS,CAACE,KAAtB;QACA,IAAIC,MAAM,GAAG,CAAC,GAAGjI,KAAK,CAACH,OAAV,EAAmBiI,SAAnB,IAAgC,CAAC,GAAG9H,KAAK,CAACH,OAAV,EAAmBiI,SAAnB,EAA8BI,KAA9B,CAAoC,GAApC,CAAhC,GAA2Ef,SAAxF;QACA,IAAIU,SAAS,GAAGF,KAAK,CAACE,SAAtB;QACA,IAAIjB,YAAY,GAAGyB,YAAY,CAACzB,YAAhC;QACA,IAAIuB,gBAAgB,GAAG;UACrBC,EAAE,EAAExD,QAAQ,CAACE,SADQ;UAErBoC,SAAS,EAAEA,SAFU;UAGrBS,KAAK,EAAE;YACLE,SAAS,EAAEA,SADN;YAELG,KAAK,EAAEA,KAFF;YAGLC,MAAM,EAAEA;UAHH;QAHc,CAAvB;;QAUA,IAAIrB,YAAJ,EAAkB;UAChBuB,gBAAgB,CAACvB,YAAjB,GAAgCA,YAAhC;QACD;;QAEDgD,MAAM,CAACvC,cAAP,CAAsBkB,IAAtB,CAA2B,YAAY;UACrCqB,MAAM,CAACpB,MAAP,CAAcC,IAAd,CAAmB,CAAC,GAAGxI,UAAU,CAACJ,OAAf,EAAwBsI,gBAAxB,CAAnB;QACD,CAFD;MAGD,CAxBD;IAyBD;IACD;AACJ;AACA;AACA;AACA;;EApCK,CAjIyC,EAuKzC;IACDT,GAAG,EAAE,OADJ;IAED9H,KAAK,EAAE,YAAY;MACjB,IAAIiK,SAAJ;;MAEA,IAAI,KAAKrC,KAAL,KAAenD,YAAY,CAACC,WAA5B,IAA2C,KAAKkD,KAAL,KAAenD,YAAY,CAACM,YAA3E,EAAyF;QACvF;MACD;;MAED,KAAK6C,KAAL,GAAanD,YAAY,CAACM,YAA1B;MACA,KAAK6D,MAAL,CAAYsB,KAAZ,GARiB,CAQI;;MAErB,IAAIC,SAAS,GAAG5I,0BAA0B,CAAC,CAAC,GAAGhB,OAAO,CAACN,OAAZ,EAAqBgK,SAAS,GAAG,KAAKtC,aAAtC,EAAqDlF,IAArD,CAA0DwH,SAA1D,CAAD,CAA1C;MAAA,IACIG,KADJ;;MAGA,IAAI;QACF,KAAKD,SAAS,CAACpI,CAAV,EAAL,EAAoB,CAAC,CAACqI,KAAK,GAAGD,SAAS,CAACnI,CAAV,EAAT,EAAwBC,IAA7C,GAAoD;UAClD,IAAIwG,YAAY,GAAG2B,KAAK,CAACpK,KAAzB;UACAyI,YAAY,CAAC4B,UAAb,GAA0B,KAA1B;UACA5B,YAAY,CAACW,IAAb,CAAkBpD,0BAA0B,CAACF,KAA7C;QACD;MACF,CAND,CAME,OAAOtD,GAAP,EAAY;QACZ2H,SAAS,CAACjI,CAAV,CAAYM,GAAZ;MACD,CARD,SAQU;QACR2H,SAAS,CAAC/H,CAAV;MACD;;MAED,KAAKkI,YAAL;;MAEA,KAAKlB,IAAL,CAAUvD,oBAAoB,CAACC,KAA/B;IACD,CA9BA,CA8BC;;EA9BD,CAvKyC,EAuMzC;IACDgC,GAAG,EAAE,cADJ;IAED9H,KAAK,EAAE,YAAY;MACjB,KAAKoH,QAAL,GAAgB,CAAhB;MACA,KAAKC,EAAL,GAAU,CAAV;MACA,KAAKC,SAAL,GAAiB,CAAjB;MACA,KAAKG,cAAL,GAAsB,CAAC,GAAGnG,aAAa,CAACoG,gBAAlB,GAAtB;MACA,KAAKC,aAAL,GAAqB,IAAIxH,IAAI,CAACF,OAAT,EAArB;IACD;EARA,CAvMyC,EAgNzC;IACD6H,GAAG,EAAE,sBADJ;IAED9H,KAAK,EAAE,YAAY;MACjB,KAAKoH,QAAL,GAAgB,CAAhB;MACA,IAAImD,cAAc,GAAG;QACnB/B,EAAE,EAAExD,QAAQ,CAACC,OADM;QAEnB2B,aAAa,EAAE,KAAKA,aAFD;QAGnBE,aAAa,EAAE,KAAKA,aAHD;QAInBC,SAAS,EAAE,KAAKA,SAJG;QAKnBC,YAAY,EAAE,KAAKA;MALA,CAArB;;MAQA,IAAI,KAAKQ,oBAAT,EAA+B;QAC7B+C,cAAc,CAACtD,cAAf,GAAgC,KAAKA,cAArC;MACD;;MAED,KAAK2B,MAAL,CAAYC,IAAZ,CAAiB,CAAC,GAAGxI,UAAU,CAACJ,OAAf,EAAwBsK,cAAxB,CAAjB;IACD;EAjBA,CAhNyC,EAkOzC;IACDzC,GAAG,EAAE,yBADJ;IAED9H,KAAK,EAAE,UAAUwJ;IACjB;IADO,EAEL;MACA,IAAIgB,IAAI,GAAGhB,KAAK,CAACgB,IAAjB;;MAEA,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;QAC5BA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;MACD;;MAED,IAAI/B,YAAY,GAAG,IAAnB;;MAEA,IAAI+B,IAAI,CAAClD,SAAT,EAAoB;QAClBmB,YAAY,GAAG,KAAKd,aAAL,CAAmBgD,GAAnB,CAAuBH,IAAI,CAAClD,SAA5B,CAAf;MACD;;MAED,IAAIsD,QAAQ,GAAG;QACbC,QAAQ,EAAEL,IAAI,CAACK,QADF;QAEb5D,cAAc,EAAEuD,IAAI,CAACvD;MAFR,CAAf;;MAKA,QAAQuD,IAAI,CAAChC,EAAb;QACE,KAAKnD,SAAS,CAACT,SAAf;UACE,IAAI,KAAKgD,KAAL,KAAenD,YAAY,CAACK,YAAhC,EAA8C;YAC5C,KAAKgG,WAAL;UACD;;UAED,KAAK1B,IAAL,CAAUvD,oBAAoB,CAACE,IAA/B;UACA,KAAKsB,EAAL,GAAUmD,IAAI,CAACK,QAAf;UACA,KAAKpD,cAAL,CAAoBsD,OAApB;UACA,KAAKnD,KAAL,GAAanD,YAAY,CAACG,SAA1B;UACA;;QAEF,KAAKS,SAAS,CAACC,UAAf;UACE,IAAImD,YAAJ,EAAkB;YAChBA,YAAY,CAAC4B,UAAb,GAA0B,IAA1B;YACA5B,YAAY,CAACuC,gBAAb,CAA8BD,OAA9B;YACA,CAAC,GAAGvK,YAAY,CAACP,OAAjB,EAA0B,YAAY;cACpC,OAAOwI,YAAY,CAACW,IAAb,CAAkBpD,0BAA0B,CAACD,IAA7C,EAAmD6E,QAAnD,CAAP;YACD,CAFD,EAEG,GAFH;UAGD;;UAED;;QAEF,KAAKvF,SAAS,CAACD,KAAf;UACE,IAAIoF,IAAI,CAAClD,SAAT,EAAoB;YAClB,IAAImB,YAAJ,EAAkB;cAChBA,YAAY,CAACuC,gBAAb,CAA8BD,OAA9B;cACA,CAAC,GAAGvK,YAAY,CAACP,OAAjB,EAA0B,YAAY;gBACpC,OAAOwI,YAAY,CAACW,IAAb,CAAkBpD,0BAA0B,CAACZ,KAA7C,EAAoDoF,IAAI,CAACX,KAAzD,CAAP;cACD,CAFD,EAEG,GAFH;YAGD;UACF,CAPD,MAOO;YACL,KAAKT,IAAL,CAAUvD,oBAAoB,CAACT,KAA/B,EAAsCoF,IAAI,CAACX,KAA3C;UACD;;UAED,IAAIW,IAAI,CAACX,KAAL,KAAe,mCAAnB,EAAwD;YACtD,KAAKrC,oBAAL,GAA4B,KAA5B;UACD;;UAED,IAAIgD,IAAI,CAACS,SAAT,EAAoB;YAClB,KAAKC,gBAAL;UACD;;UAED;;QAEF,KAAK7F,SAAS,CAACE,YAAf;UACE;UACA;;QAEF;UACE;YACE;YACA,IAAI,CAACkD,YAAL,EAAmB;cACjB;YACD;;YAED,IAAI0C,QAAQ,GAAG,KAAf;;YAEA,IAAIX,IAAI,CAACY,QAAT,EAAmB;cACjBD,QAAQ,GAAG,IAAX;cACA,OAAOX,IAAI,CAACY,QAAL,CAAcC,MAArB,CAFiB,CAEY;;cAE7B,KAAK,IAAIC,KAAT,IAAkBd,IAAI,CAACY,QAAvB,EAAiC;gBAC/B,IAAI,EAAEE,KAAK,IAAId,IAAI,CAACe,MAAhB,CAAJ,EAA6B;kBAC3Bf,IAAI,CAACe,MAAL,CAAYD,KAAZ,IAAqB/D,SAArB;gBACD;cACF;;cAEDiD,IAAI,CAACY,QAAL,GAAgBhK,YAAY,CAACnB,OAAb,CAAqBuL,QAArB,CAA8BhB,IAAI,CAACY,QAAnC,EAA6C,KAA7C,CAAhB;YACD;;YAED,OAAOZ,IAAI,CAACe,MAAL,CAAYF,MAAnB;;YAEA,IAAII,WAAW,GAAGrK,YAAY,CAACnB,OAAb,CAAqBuL,QAArB,CAA8BhB,IAAI,CAACe,MAAnC,EAA2CJ,QAA3C,CAAlB;;YAEA,IAAIX,IAAI,CAACY,QAAT,EAAmB;cACjB3C,YAAY,CAACW,IAAb,CAAkBoB,IAAI,CAAChC,EAAvB,EAA2BiD,WAA3B,EAAwCjB,IAAI,CAACY,QAA7C,EAAuDR,QAAvD;YACD,CAFD,MAEO;cACLnC,YAAY,CAACW,IAAb,CAAkBoB,IAAI,CAAChC,EAAvB,EAA2BiD,WAA3B,EAAwCb,QAAxC;YACD;;YAED,IAAIc,cAAc,GAAGxK,YAAY,CAACjB,OAAb,CAAqB0L,iBAArB,EAArB;;YAEA,IAAIR,QAAQ,IAAIO,cAAc,CAACE,SAA/B,EAA0C;cACxCF,cAAc,CAACG,qBAAf,CAAqCJ,WAArC,EAAkD9C,IAAlD,CAAuD,YAAY,CAAE,CAArE;YACD;UACF;MAtFL;IAwFD;EA9GA,CAlOyC,EAiVzC;IACDb,GAAG,EAAE,uBADJ;IAED9H,KAAK,EAAE,YAAY;MACjB,IAAI8L,SAAJ;;MAEA,IAAI,KAAKlE,KAAL,KAAenD,YAAY,CAACM,YAAhC,EAA8C;QAC5C;MACD;;MAED,KAAK6C,KAAL,GAAanD,YAAY,CAACI,MAA1B;MACA,KAAKuE,IAAL,CAAUvD,oBAAoB,CAACC,KAA/B,EARiB,CAQsB;;MAEvC,IAAIiG,UAAU,GAAGxK,0BAA0B,CAAC,CAAC,GAAGhB,OAAO,CAACN,OAAZ,EAAqB6L,SAAS,GAAG,KAAKnE,aAAtC,EAAqDlF,IAArD,CAA0DqJ,SAA1D,CAAD,CAA3C;MAAA,IACIE,MADJ;;MAGA,IAAI;QACF,KAAKD,UAAU,CAAChK,CAAX,EAAL,EAAqB,CAAC,CAACiK,MAAM,GAAGD,UAAU,CAAC/J,CAAX,EAAV,EAA0BC,IAAhD,GAAuD;UACrD,IAAIwG,YAAY,GAAGuD,MAAM,CAAChM,KAA1B;UACAyI,YAAY,CAACW,IAAb,CAAkBpD,0BAA0B,CAACF,KAA7C;QACD;MACF,CALD,CAKE,OAAOtD,GAAP,EAAY;QACZuJ,UAAU,CAAC7J,CAAX,CAAaM,GAAb;MACD,CAPD,SAOU;QACRuJ,UAAU,CAAC3J,CAAX;MACD;;MAED,KAAK8I,gBAAL;IACD;EA3BA,CAjVyC,EA6WzC;IACDpD,GAAG,EAAE,uBADJ;IAED9H,KAAK,EAAE,UAAU6J;IACjB;IADO,EAEL;MACA,IAAIoC,SAAJ;;MAEA,KAAK7C,IAAL,CAAUvD,oBAAoB,CAACT,KAA/B,EAAsCyE,KAAtC;;MAEA,IAAIqC,UAAU,GAAG3K,0BAA0B,CAAC,CAAC,GAAGhB,OAAO,CAACN,OAAZ,EAAqBgM,SAAS,GAAG,KAAKtE,aAAtC,EAAqDlF,IAArD,CAA0DwJ,SAA1D,CAAD,CAA3C;MAAA,IACIE,MADJ;;MAGA,IAAI;QACF,KAAKD,UAAU,CAACnK,CAAX,EAAL,EAAqB,CAAC,CAACoK,MAAM,GAAGD,UAAU,CAAClK,CAAX,EAAV,EAA0BC,IAAhD,GAAuD;UACrD,IAAIwG,YAAY,GAAG0D,MAAM,CAACnM,KAA1B;UACAyI,YAAY,CAACW,IAAb,CAAkBpD,0BAA0B,CAACZ,KAA7C,EAAoDyE,KAApD;QACD;MACF,CALD,CAKE,OAAOrH,GAAP,EAAY;QACZ0J,UAAU,CAAChK,CAAX,CAAaM,GAAb;MACD,CAPD,SAOU;QACR0J,UAAU,CAAC9J,CAAX;MACD;;MAED,KAAK8I,gBAAL;IACD;EAxBA,CA7WyC,EAsYzC;IACDpD,GAAG,EAAE,kBADJ;IAED9H,KAAK,EAAE,YAAY;MACjB,IAAIoM,SAAJ;MAAA,IACIC,MAAM,GAAG,IADb,CADiB,CAEE;;;MAGnB,IAAI,KAAKzE,KAAL,KAAenD,YAAY,CAACM,YAAhC,EAA8C;QAC5C;MACD;;MAED,KAAK6C,KAAL,GAAanD,YAAY,CAACK,YAA1B;MACA,IAAIwH,IAAI,GAAGrG,gBAAgB,CAAC,KAAKmB,QAAN,CAA3B,CAViB,CAU2B;MAC5C;MACA;MACA;;MAEA,IAAI,KAAKD,eAAT,EAA0B;QACxBoF,YAAY,CAAC,KAAKpF,eAAN,CAAZ;MACD;;MAED,KAAKA,eAAL,GAAuB,CAAC,GAAG3G,YAAY,CAACP,OAAjB,EAA0B,CAAC,GAAGQ,KAAK,CAACR,OAAV,EAAmBmM,SAAS,GAAG,YAAY;QAC1FC,MAAM,CAACjF,QAAP;QACAiF,MAAM,CAAC5E,cAAP,GAAwB,CAAC,GAAGnG,aAAa,CAACoG,gBAAlB,GAAxB;;QAEA2E,MAAM,CAACG,IAAP;MACD,CALgD,EAK9C/J,IAL8C,CAKzC2J,SALyC,EAK9B,IAL8B,CAA1B,EAKGE,IALH,CAAvB;IAMD;EA3BA,CAtYyC,CAA5C;EAmaA,OAAO/F,eAAP;AACD,CAtekC,CAsejCpF,cAAc,CAAClB,OAtekB,CAAnC;;AAweAiB,YAAY,CAACjB,OAAb,CAAqBwM,sBAArB,CAA4C,OAAOC,SAAP,KAAqB,UAArB,IAAmC,CAAC,OAAOA,SAAP,KAAqB,WAArB,GAAmC,WAAnC,GAAiD,CAAC,GAAGhM,QAAQ,CAACT,OAAb,EAAsByM,SAAtB,CAAlD,MAAwF,QAA3H,GAAsIA,SAAtI,GAAkJ,IAA9L;;AAEA,IAAIC,QAAQ,GAAGpG,eAAf;AACAxG,OAAO,CAACE,OAAR,GAAkB0M,QAAlB"},"metadata":{},"sourceType":"script"}
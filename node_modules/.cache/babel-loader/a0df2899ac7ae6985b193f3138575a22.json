{"ast":null,"code":"var global = require('../internals/global');\n\nvar isRegExp = require('../internals/is-regexp');\n\nvar TypeError = global.TypeError;\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  }\n\n  return it;\n};","map":{"version":3,"names":["global","require","isRegExp","TypeError","module","exports","it"],"sources":["E:/intoweb3/NBlockment/blockment/node_modules/core-js-pure/internals/not-a-regexp.js"],"sourcesContent":["var global = require('../internals/global');\nvar isRegExp = require('../internals/is-regexp');\n\nvar TypeError = global.TypeError;\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AAEA,IAAIE,SAAS,GAAGH,MAAM,CAACG,SAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,EAAV,EAAc;EAC7B,IAAIJ,QAAQ,CAACI,EAAD,CAAZ,EAAkB;IAChB,MAAMH,SAAS,CAAC,+CAAD,CAAf;EACD;;EAAC,OAAOG,EAAP;AACH,CAJD"},"metadata":{},"sourceType":"script"}